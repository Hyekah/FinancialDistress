{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.3"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false},"colab":{"provenance":[{"file_id":"1dkun8ueAMB7QL_3IRem5zuw1KwYvr1WN","timestamp":1730480894897}]}},"cells":[{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:08:09.769222Z","start_time":"2020-12-04T15:08:08.658803Z"},"id":"vLODkeczUKc0","executionInfo":{"status":"ok","timestamp":1731142823440,"user_tz":-420,"elapsed":9825,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["import pandas as pd\n","import numpy as np\n","import sys\n","import seaborn as sns; sns.set()\n","import matplotlib.pyplot as plt\n","from collections import Counter\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import RobustScaler,MinMaxScaler,LabelBinarizer\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import GridSearchCV,cross_validate,cross_val_score\n","from sklearn.svm import SVC\n","from sklearn.impute import SimpleImputer\n","from sklearn.decomposition import PCA\n","from sklearn.metrics import ConfusionMatrixDisplay\n","from sklearn.model_selection import GridSearchCV,cross_validate,cross_val_score\n","from sklearn.svm import SVC\n","from sklearn.impute import SimpleImputer\n","from sklearn.decomposition import PCA"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:08:16.206215Z","start_time":"2020-12-04T15:08:11.989602Z"},"id":"L_StYAJyUKc6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731142869722,"user_tz":-420,"elapsed":46289,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"02cd8a54-eec0-4919-aaa2-286cc4e34c76"},"source":["import pandas as pd\n","from google.colab import drive\n","drive.mount('/content/drive')\n","file_path = '/content/drive/MyDrive/FINAL/EMS2021demo.xlsx' # Đường dẫn đã được cập nhật\n","data = pd.read_excel(file_path)"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:12:46.875331Z","start_time":"2020-12-04T15:12:46.868237Z"},"id":"-v0yqAzCUKc7","executionInfo":{"status":"ok","timestamp":1731142869724,"user_tz":-420,"elapsed":12,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["data.reset_index(inplace=True,drop=True)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:12:47.590216Z","start_time":"2020-12-04T15:12:47.543558Z"},"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"MvQ8ghpvUKc9","executionInfo":{"status":"ok","timestamp":1731142869724,"user_tz":-420,"elapsed":10,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"01af6821-cf35-4e76-e242-fb8e753ce15c"},"source":["data"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          RETA    EBITTA     BVETL  ASSETURN        CR     STDTA     LTDTA  \\\n","0     0.184233  0.079052  0.822739  1.279282  1.387272  0.000000  0.000000   \n","1     0.198628  0.039749  1.197411  1.414840  1.631340  0.218110  0.117488   \n","2     0.031920  0.187670  5.259951  1.255183  5.120803  0.000000  0.000000   \n","3     0.063919  0.057228  0.416696  0.791592  1.235847  0.315868  0.050321   \n","4     0.091293  0.041068  1.633414  1.421209  1.866691  0.349157  0.000000   \n","...        ...       ...       ...       ...       ...       ...       ...   \n","1174  0.030924 -0.037387  0.646063  0.998447  0.900104  0.190387  0.027026   \n","1175  0.045629 -0.004011 -0.135573  0.795923  0.968001  0.123221  0.657060   \n","1176  0.100321  0.021366  0.370498  1.441306  1.359260  0.148585  0.000000   \n","1177  0.016146  0.025986  0.539423  1.894019  1.431217  0.034163  0.000000   \n","1178  0.021295  0.018695  0.274896  0.347298  1.069104  0.401500  0.063216   \n","\n","          OCFCAPEX       EVR  Financial Situation  \n","0        24.420941  0.176669                    0  \n","1        -0.797216  0.331361                    0  \n","2       169.591947  0.975984                    0  \n","3         1.801569  0.671313                    1  \n","4       -14.810016  0.747980                    1  \n","...            ...       ...                  ...  \n","1174     -2.452936  0.318688                    1  \n","1175      0.669532  1.012465                    1  \n","1176   -294.896731  0.126410                    0  \n","1177 -31328.351730  0.093254                    0  \n","1178    -13.732360  1.476963                    1  \n","\n","[1179 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-5caf8637-28de-473b-a078-b38a3ff46004\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>RETA</th>\n","      <th>EBITTA</th>\n","      <th>BVETL</th>\n","      <th>ASSETURN</th>\n","      <th>CR</th>\n","      <th>STDTA</th>\n","      <th>LTDTA</th>\n","      <th>OCFCAPEX</th>\n","      <th>EVR</th>\n","      <th>Financial Situation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.184233</td>\n","      <td>0.079052</td>\n","      <td>0.822739</td>\n","      <td>1.279282</td>\n","      <td>1.387272</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>24.420941</td>\n","      <td>0.176669</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.198628</td>\n","      <td>0.039749</td>\n","      <td>1.197411</td>\n","      <td>1.414840</td>\n","      <td>1.631340</td>\n","      <td>0.218110</td>\n","      <td>0.117488</td>\n","      <td>-0.797216</td>\n","      <td>0.331361</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.031920</td>\n","      <td>0.187670</td>\n","      <td>5.259951</td>\n","      <td>1.255183</td>\n","      <td>5.120803</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>169.591947</td>\n","      <td>0.975984</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.063919</td>\n","      <td>0.057228</td>\n","      <td>0.416696</td>\n","      <td>0.791592</td>\n","      <td>1.235847</td>\n","      <td>0.315868</td>\n","      <td>0.050321</td>\n","      <td>1.801569</td>\n","      <td>0.671313</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.091293</td>\n","      <td>0.041068</td>\n","      <td>1.633414</td>\n","      <td>1.421209</td>\n","      <td>1.866691</td>\n","      <td>0.349157</td>\n","      <td>0.000000</td>\n","      <td>-14.810016</td>\n","      <td>0.747980</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1174</th>\n","      <td>0.030924</td>\n","      <td>-0.037387</td>\n","      <td>0.646063</td>\n","      <td>0.998447</td>\n","      <td>0.900104</td>\n","      <td>0.190387</td>\n","      <td>0.027026</td>\n","      <td>-2.452936</td>\n","      <td>0.318688</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1175</th>\n","      <td>0.045629</td>\n","      <td>-0.004011</td>\n","      <td>-0.135573</td>\n","      <td>0.795923</td>\n","      <td>0.968001</td>\n","      <td>0.123221</td>\n","      <td>0.657060</td>\n","      <td>0.669532</td>\n","      <td>1.012465</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1176</th>\n","      <td>0.100321</td>\n","      <td>0.021366</td>\n","      <td>0.370498</td>\n","      <td>1.441306</td>\n","      <td>1.359260</td>\n","      <td>0.148585</td>\n","      <td>0.000000</td>\n","      <td>-294.896731</td>\n","      <td>0.126410</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1177</th>\n","      <td>0.016146</td>\n","      <td>0.025986</td>\n","      <td>0.539423</td>\n","      <td>1.894019</td>\n","      <td>1.431217</td>\n","      <td>0.034163</td>\n","      <td>0.000000</td>\n","      <td>-31328.351730</td>\n","      <td>0.093254</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1178</th>\n","      <td>0.021295</td>\n","      <td>0.018695</td>\n","      <td>0.274896</td>\n","      <td>0.347298</td>\n","      <td>1.069104</td>\n","      <td>0.401500</td>\n","      <td>0.063216</td>\n","      <td>-13.732360</td>\n","      <td>1.476963</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1179 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5caf8637-28de-473b-a078-b38a3ff46004')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5caf8637-28de-473b-a078-b38a3ff46004 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5caf8637-28de-473b-a078-b38a3ff46004');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e314e745-2425-4fa9-baa4-bc1072afabc3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e314e745-2425-4fa9-baa4-bc1072afabc3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e314e745-2425-4fa9-baa4-bc1072afabc3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a46d6f8c-1304-4466-b123-6ca274255cb3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a46d6f8c-1304-4466-b123-6ca274255cb3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1179,\n  \"fields\": [\n    {\n      \"column\": \"RETA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09713883511981625,\n        \"min\": 5.198899893772727e-06,\n        \"max\": 0.7282302939449513,\n        \"num_unique_values\": 1176,\n        \"samples\": [\n          0.003229015753748272,\n          0.15887859944545243,\n          0.03102183886059068\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EBITTA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16801481879583904,\n        \"min\": -3.3503405390796495,\n        \"max\": 2.873531289260282,\n        \"num_unique_values\": 1176,\n        \"samples\": [\n          -0.026306843559894558,\n          0.03600553157371564,\n          0.0714213879107549\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BVETL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.49875716731291,\n        \"min\": -0.9824298784846371,\n        \"max\": 98.34135768711674,\n        \"num_unique_values\": 1176,\n        \"samples\": [\n          0.088979712571209,\n          1.2576384450778142,\n          3.310950805232448\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ASSETURN\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3241547956502846,\n        \"min\": -0.04644238,\n        \"max\": 12.62608734,\n        \"num_unique_values\": 1165,\n        \"samples\": [\n          0.94721581,\n          1.18267318,\n          1.22835451\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.780979941693968,\n        \"min\": 0.00658865,\n        \"max\": 107.38771346,\n        \"num_unique_values\": 1177,\n        \"samples\": [\n          0.37479058,\n          1.45116,\n          2.8996954699999997\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"STDTA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8384743673351381,\n        \"min\": 0.0,\n        \"max\": 20.52358233,\n        \"num_unique_values\": 921,\n        \"samples\": [\n          0.28660132,\n          0.35225448,\n          0.23335445\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LTDTA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16015807714531852,\n        \"min\": 0.0,\n        \"max\": 2.78211121,\n        \"num_unique_values\": 630,\n        \"samples\": [\n          0.28185123,\n          0.0382497,\n          0.1305876\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OCFCAPEX\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1697.4964700145313,\n        \"min\": -45049.292788629995,\n        \"max\": 2089.45775351,\n        \"num_unique_values\": 1062,\n        \"samples\": [\n          -2.60894011,\n          -2.63372187,\n          0.67114183\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EVR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 134.15248286954778,\n        \"min\": -342.0567397,\n        \"max\": 3853.34255644,\n        \"num_unique_values\": 1155,\n        \"samples\": [\n          2.80399058,\n          0.00200642,\n          1.27233051\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Financial Situation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data_cap=data.copy()"],"metadata":{"id":"czL3xTKmcX2r","executionInfo":{"status":"ok","timestamp":1731142886853,"user_tz":-420,"elapsed":390,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["from scipy import stats\n","def percentile_capping(data, cols, from_low_end, from_high_end):\n","  for col in cols:\n","    # lower_bound = data[col].quantile(from_low_end)\n","    # upper_bound = data[col].quantile(1- from_high_end)\n","\n","    # data[col] = np.where(data[col] < from_low_end, lower_bound, data[col])\n","    # data[col] = np.where(data[col] > from_high_end, from_high_end, data[col])\n","\n","    lower_bound = data[col].quantile(from_low_end)\n","    upper_bound = data[col].quantile(from_high_end)\n","    stats.mstats.winsorize(a = data[col], limits = [from_low_end, from_high_end], inplace = True)"],"metadata":{"id":"Z7X3dWgLcjo1","executionInfo":{"status":"ok","timestamp":1731142887236,"user_tz":-420,"elapsed":2,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["percentile_capping(data_cap, ['RETA','EBITTA','BVETL','ASSETURN','CR','STDTA','LTDTA','OCFCAPEX','EVR'], 0.10, 0.10)"],"metadata":{"id":"_S6qQftUcuOs","executionInfo":{"status":"ok","timestamp":1731142888028,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:12:50.861505Z","start_time":"2020-12-04T15:12:50.854609Z"},"id":"zKji_OJsUKc_","executionInfo":{"status":"ok","timestamp":1731142888421,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["y = data_cap['Financial Situation']\n","X = data_cap.drop(['Financial Situation'],axis=1)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:12:51.420549Z","start_time":"2020-12-04T15:12:51.408763Z"},"id":"KzZXHj1xUKdA","executionInfo":{"status":"ok","timestamp":1731142889516,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=0,shuffle=True)"],"execution_count":9,"outputs":[]},{"cell_type":"code","source":["corr = data_cap.corr()\n","corr.style.background_gradient(cmap='coolwarm')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"OCw931dGcziq","executionInfo":{"status":"ok","timestamp":1731142889920,"user_tz":-420,"elapsed":4,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"3043c161-13fe-4d25-d1e1-40aa2ce05a2a"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7f9deaf00760>"],"text/html":["<style type=\"text/css\">\n","#T_20cdc_row0_col0, #T_20cdc_row1_col1, #T_20cdc_row2_col2, #T_20cdc_row3_col3, #T_20cdc_row4_col4, #T_20cdc_row5_col5, #T_20cdc_row6_col6, #T_20cdc_row7_col7, #T_20cdc_row8_col8, #T_20cdc_row9_col9 {\n","  background-color: #b40426;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row0_col1, #T_20cdc_row3_col5 {\n","  background-color: #d6dce4;\n","  color: #000000;\n","}\n","#T_20cdc_row0_col2 {\n","  background-color: #cedaeb;\n","  color: #000000;\n","}\n","#T_20cdc_row0_col3 {\n","  background-color: #dbdcde;\n","  color: #000000;\n","}\n","#T_20cdc_row0_col4 {\n","  background-color: #d5dbe5;\n","  color: #000000;\n","}\n","#T_20cdc_row0_col5, #T_20cdc_row6_col2 {\n","  background-color: #6c8ff1;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row0_col6 {\n","  background-color: #5673e0;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row0_col7, #T_20cdc_row5_col1 {\n","  background-color: #5977e3;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row0_col8 {\n","  background-color: #88abfd;\n","  color: #000000;\n","}\n","#T_20cdc_row0_col9, #T_20cdc_row1_col6, #T_20cdc_row2_col7, #T_20cdc_row7_col1 {\n","  background-color: #6e90f2;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row1_col0 {\n","  background-color: #ccd9ed;\n","  color: #000000;\n","}\n","#T_20cdc_row1_col2 {\n","  background-color: #dfdbd9;\n","  color: #000000;\n","}\n","#T_20cdc_row1_col3 {\n","  background-color: #e4d9d2;\n","  color: #000000;\n","}\n","#T_20cdc_row1_col4 {\n","  background-color: #dedcdb;\n","  color: #000000;\n","}\n","#T_20cdc_row1_col5 {\n","  background-color: #799cf8;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row1_col7, #T_20cdc_row2_col5, #T_20cdc_row2_col6, #T_20cdc_row3_col8, #T_20cdc_row4_col9, #T_20cdc_row5_col0, #T_20cdc_row5_col2, #T_20cdc_row8_col3, #T_20cdc_row9_col1, #T_20cdc_row9_col4 {\n","  background-color: #3b4cc0;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row1_col8 {\n","  background-color: #a1c0ff;\n","  color: #000000;\n","}\n","#T_20cdc_row1_col9 {\n","  background-color: #5b7ae5;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row2_col0, #T_20cdc_row7_col9 {\n","  background-color: #adc9fd;\n","  color: #000000;\n","}\n","#T_20cdc_row2_col1 {\n","  background-color: #cfdaea;\n","  color: #000000;\n","}\n","#T_20cdc_row2_col3, #T_20cdc_row3_col4, #T_20cdc_row5_col6 {\n","  background-color: #92b4fe;\n","  color: #000000;\n","}\n","#T_20cdc_row2_col4, #T_20cdc_row4_col2 {\n","  background-color: #e36b54;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row2_col8 {\n","  background-color: #dadce0;\n","  color: #000000;\n","}\n","#T_20cdc_row2_col9, #T_20cdc_row3_col7, #T_20cdc_row4_col5, #T_20cdc_row5_col4, #T_20cdc_row9_col2 {\n","  background-color: #3e51c5;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row3_col0, #T_20cdc_row4_col0 {\n","  background-color: #b6cefa;\n","  color: #000000;\n","}\n","#T_20cdc_row3_col1, #T_20cdc_row4_col1, #T_20cdc_row4_col8 {\n","  background-color: #cdd9ec;\n","  color: #000000;\n","}\n","#T_20cdc_row3_col2, #T_20cdc_row6_col3 {\n","  background-color: #84a7fc;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row3_col6 {\n","  background-color: #4358cb;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row3_col9, #T_20cdc_row7_col5 {\n","  background-color: #a7c5fe;\n","  color: #000000;\n","}\n","#T_20cdc_row4_col3 {\n","  background-color: #9ebeff;\n","  color: #000000;\n","}\n","#T_20cdc_row4_col6 {\n","  background-color: #4055c8;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row4_col7 {\n","  background-color: #6f92f3;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row5_col3 {\n","  background-color: #dcdddd;\n","  color: #000000;\n","}\n","#T_20cdc_row5_col7 {\n","  background-color: #5a78e4;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row5_col8, #T_20cdc_row7_col3 {\n","  background-color: #9dbdff;\n","  color: #000000;\n","}\n","#T_20cdc_row5_col9, #T_20cdc_row9_col5 {\n","  background-color: #f5c1a9;\n","  color: #000000;\n","}\n","#T_20cdc_row6_col0 {\n","  background-color: #5875e1;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row6_col1 {\n","  background-color: #80a3fa;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row6_col4 {\n","  background-color: #7396f5;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row6_col5 {\n","  background-color: #bad0f8;\n","  color: #000000;\n","}\n","#T_20cdc_row6_col7 {\n","  background-color: #455cce;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row6_col8 {\n","  background-color: #e8d6cc;\n","  color: #000000;\n","}\n","#T_20cdc_row6_col9 {\n","  background-color: #e3d9d3;\n","  color: #000000;\n","}\n","#T_20cdc_row7_col0 {\n","  background-color: #7a9df8;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row7_col2 {\n","  background-color: #b7cff9;\n","  color: #000000;\n","}\n","#T_20cdc_row7_col4 {\n","  background-color: #b9d0f9;\n","  color: #000000;\n","}\n","#T_20cdc_row7_col6 {\n","  background-color: #6687ed;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row7_col8 {\n","  background-color: #d9dce1;\n","  color: #000000;\n","}\n","#T_20cdc_row8_col0 {\n","  background-color: #485fd1;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row8_col1 {\n","  background-color: #7699f6;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row8_col2 {\n","  background-color: #d3dbe7;\n","  color: #000000;\n","}\n","#T_20cdc_row8_col4 {\n","  background-color: #c5d6f2;\n","  color: #000000;\n","}\n","#T_20cdc_row8_col5 {\n","  background-color: #90b2fe;\n","  color: #000000;\n","}\n","#T_20cdc_row8_col6 {\n","  background-color: #c9d7f0;\n","  color: #000000;\n","}\n","#T_20cdc_row8_col7 {\n","  background-color: #97b8ff;\n","  color: #000000;\n","}\n","#T_20cdc_row8_col9, #T_20cdc_row9_col3 {\n","  background-color: #b2ccfb;\n","  color: #000000;\n","}\n","#T_20cdc_row9_col0 {\n","  background-color: #3c4ec2;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row9_col6 {\n","  background-color: #cad8ef;\n","  color: #000000;\n","}\n","#T_20cdc_row9_col7 {\n","  background-color: #5f7fe8;\n","  color: #f1f1f1;\n","}\n","#T_20cdc_row9_col8 {\n","  background-color: #bcd2f7;\n","  color: #000000;\n","}\n","</style>\n","<table id=\"T_20cdc\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th id=\"T_20cdc_level0_col0\" class=\"col_heading level0 col0\" >RETA</th>\n","      <th id=\"T_20cdc_level0_col1\" class=\"col_heading level0 col1\" >EBITTA</th>\n","      <th id=\"T_20cdc_level0_col2\" class=\"col_heading level0 col2\" >BVETL</th>\n","      <th id=\"T_20cdc_level0_col3\" class=\"col_heading level0 col3\" >ASSETURN</th>\n","      <th id=\"T_20cdc_level0_col4\" class=\"col_heading level0 col4\" >CR</th>\n","      <th id=\"T_20cdc_level0_col5\" class=\"col_heading level0 col5\" >STDTA</th>\n","      <th id=\"T_20cdc_level0_col6\" class=\"col_heading level0 col6\" >LTDTA</th>\n","      <th id=\"T_20cdc_level0_col7\" class=\"col_heading level0 col7\" >OCFCAPEX</th>\n","      <th id=\"T_20cdc_level0_col8\" class=\"col_heading level0 col8\" >EVR</th>\n","      <th id=\"T_20cdc_level0_col9\" class=\"col_heading level0 col9\" >Financial Situation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row0\" class=\"row_heading level0 row0\" >RETA</th>\n","      <td id=\"T_20cdc_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n","      <td id=\"T_20cdc_row0_col1\" class=\"data row0 col1\" >0.281563</td>\n","      <td id=\"T_20cdc_row0_col2\" class=\"data row0 col2\" >0.155876</td>\n","      <td id=\"T_20cdc_row0_col3\" class=\"data row0 col3\" >0.187357</td>\n","      <td id=\"T_20cdc_row0_col4\" class=\"data row0 col4\" >0.188437</td>\n","      <td id=\"T_20cdc_row0_col5\" class=\"data row0 col5\" >-0.285256</td>\n","      <td id=\"T_20cdc_row0_col6\" class=\"data row0 col6\" >-0.161071</td>\n","      <td id=\"T_20cdc_row0_col7\" class=\"data row0 col7\" >-0.029805</td>\n","      <td id=\"T_20cdc_row0_col8\" class=\"data row0 col8\" >-0.226706</td>\n","      <td id=\"T_20cdc_row0_col9\" class=\"data row0 col9\" >-0.279496</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row1\" class=\"row_heading level0 row1\" >EBITTA</th>\n","      <td id=\"T_20cdc_row1_col0\" class=\"data row1 col0\" >0.281563</td>\n","      <td id=\"T_20cdc_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n","      <td id=\"T_20cdc_row1_col2\" class=\"data row1 col2\" >0.252822</td>\n","      <td id=\"T_20cdc_row1_col3\" class=\"data row1 col3\" >0.242822</td>\n","      <td id=\"T_20cdc_row1_col4\" class=\"data row1 col4\" >0.242547</td>\n","      <td id=\"T_20cdc_row1_col5\" class=\"data row1 col5\" >-0.230185</td>\n","      <td id=\"T_20cdc_row1_col6\" class=\"data row1 col6\" >-0.074153</td>\n","      <td id=\"T_20cdc_row1_col7\" class=\"data row1 col7\" >-0.144864</td>\n","      <td id=\"T_20cdc_row1_col8\" class=\"data row1 col8\" >-0.109917</td>\n","      <td id=\"T_20cdc_row1_col9\" class=\"data row1 col9\" >-0.364695</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row2\" class=\"row_heading level0 row2\" >BVETL</th>\n","      <td id=\"T_20cdc_row2_col0\" class=\"data row2 col0\" >0.155876</td>\n","      <td id=\"T_20cdc_row2_col1\" class=\"data row2 col1\" >0.252822</td>\n","      <td id=\"T_20cdc_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n","      <td id=\"T_20cdc_row2_col3\" class=\"data row2 col3\" >-0.182561</td>\n","      <td id=\"T_20cdc_row2_col4\" class=\"data row2 col4\" >0.777105</td>\n","      <td id=\"T_20cdc_row2_col5\" class=\"data row2 col5\" >-0.524966</td>\n","      <td id=\"T_20cdc_row2_col6\" class=\"data row2 col6\" >-0.281100</td>\n","      <td id=\"T_20cdc_row2_col7\" class=\"data row2 col7\" >0.042602</td>\n","      <td id=\"T_20cdc_row2_col8\" class=\"data row2 col8\" >0.180217</td>\n","      <td id=\"T_20cdc_row2_col9\" class=\"data row2 col9\" >-0.504683</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row3\" class=\"row_heading level0 row3\" >ASSETURN</th>\n","      <td id=\"T_20cdc_row3_col0\" class=\"data row3 col0\" >0.187357</td>\n","      <td id=\"T_20cdc_row3_col1\" class=\"data row3 col1\" >0.242822</td>\n","      <td id=\"T_20cdc_row3_col2\" class=\"data row3 col2\" >-0.182561</td>\n","      <td id=\"T_20cdc_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n","      <td id=\"T_20cdc_row3_col4\" class=\"data row3 col4\" >-0.123145</td>\n","      <td id=\"T_20cdc_row3_col5\" class=\"data row3 col5\" >0.197197</td>\n","      <td id=\"T_20cdc_row3_col6\" class=\"data row3 col6\" >-0.242448</td>\n","      <td id=\"T_20cdc_row3_col7\" class=\"data row3 col7\" >-0.128201</td>\n","      <td id=\"T_20cdc_row3_col8\" class=\"data row3 col8\" >-0.602378</td>\n","      <td id=\"T_20cdc_row3_col9\" class=\"data row3 col9\" >-0.026917</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row4\" class=\"row_heading level0 row4\" >CR</th>\n","      <td id=\"T_20cdc_row4_col0\" class=\"data row4 col0\" >0.188437</td>\n","      <td id=\"T_20cdc_row4_col1\" class=\"data row4 col1\" >0.242547</td>\n","      <td id=\"T_20cdc_row4_col2\" class=\"data row4 col2\" >0.777105</td>\n","      <td id=\"T_20cdc_row4_col3\" class=\"data row4 col3\" >-0.123145</td>\n","      <td id=\"T_20cdc_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n","      <td id=\"T_20cdc_row4_col5\" class=\"data row4 col5\" >-0.505777</td>\n","      <td id=\"T_20cdc_row4_col6\" class=\"data row4 col6\" >-0.255881</td>\n","      <td id=\"T_20cdc_row4_col7\" class=\"data row4 col7\" >0.047035</td>\n","      <td id=\"T_20cdc_row4_col8\" class=\"data row4 col8\" >0.105506</td>\n","      <td id=\"T_20cdc_row4_col9\" class=\"data row4 col9\" >-0.527955</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row5\" class=\"row_heading level0 row5\" >STDTA</th>\n","      <td id=\"T_20cdc_row5_col0\" class=\"data row5 col0\" >-0.285256</td>\n","      <td id=\"T_20cdc_row5_col1\" class=\"data row5 col1\" >-0.230185</td>\n","      <td id=\"T_20cdc_row5_col2\" class=\"data row5 col2\" >-0.524966</td>\n","      <td id=\"T_20cdc_row5_col3\" class=\"data row5 col3\" >0.197197</td>\n","      <td id=\"T_20cdc_row5_col4\" class=\"data row5 col4\" >-0.505777</td>\n","      <td id=\"T_20cdc_row5_col5\" class=\"data row5 col5\" >1.000000</td>\n","      <td id=\"T_20cdc_row5_col6\" class=\"data row5 col6\" >0.055946</td>\n","      <td id=\"T_20cdc_row5_col7\" class=\"data row5 col7\" >-0.026402</td>\n","      <td id=\"T_20cdc_row5_col8\" class=\"data row5 col8\" >-0.131466</td>\n","      <td id=\"T_20cdc_row5_col9\" class=\"data row5 col9\" >0.442183</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row6\" class=\"row_heading level0 row6\" >LTDTA</th>\n","      <td id=\"T_20cdc_row6_col0\" class=\"data row6 col0\" >-0.161071</td>\n","      <td id=\"T_20cdc_row6_col1\" class=\"data row6 col1\" >-0.074153</td>\n","      <td id=\"T_20cdc_row6_col2\" class=\"data row6 col2\" >-0.281100</td>\n","      <td id=\"T_20cdc_row6_col3\" class=\"data row6 col3\" >-0.242448</td>\n","      <td id=\"T_20cdc_row6_col4\" class=\"data row6 col4\" >-0.255881</td>\n","      <td id=\"T_20cdc_row6_col5\" class=\"data row6 col5\" >0.055946</td>\n","      <td id=\"T_20cdc_row6_col6\" class=\"data row6 col6\" >1.000000</td>\n","      <td id=\"T_20cdc_row6_col7\" class=\"data row6 col7\" >-0.101189</td>\n","      <td id=\"T_20cdc_row6_col8\" class=\"data row6 col8\" >0.268661</td>\n","      <td id=\"T_20cdc_row6_col9\" class=\"data row6 col9\" >0.274278</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row7\" class=\"row_heading level0 row7\" >OCFCAPEX</th>\n","      <td id=\"T_20cdc_row7_col0\" class=\"data row7 col0\" >-0.029805</td>\n","      <td id=\"T_20cdc_row7_col1\" class=\"data row7 col1\" >-0.144864</td>\n","      <td id=\"T_20cdc_row7_col2\" class=\"data row7 col2\" >0.042602</td>\n","      <td id=\"T_20cdc_row7_col3\" class=\"data row7 col3\" >-0.128201</td>\n","      <td id=\"T_20cdc_row7_col4\" class=\"data row7 col4\" >0.047035</td>\n","      <td id=\"T_20cdc_row7_col5\" class=\"data row7 col5\" >-0.026402</td>\n","      <td id=\"T_20cdc_row7_col6\" class=\"data row7 col6\" >-0.101189</td>\n","      <td id=\"T_20cdc_row7_col7\" class=\"data row7 col7\" >1.000000</td>\n","      <td id=\"T_20cdc_row7_col8\" class=\"data row7 col8\" >0.176910</td>\n","      <td id=\"T_20cdc_row7_col9\" class=\"data row7 col9\" >-0.007754</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row8\" class=\"row_heading level0 row8\" >EVR</th>\n","      <td id=\"T_20cdc_row8_col0\" class=\"data row8 col0\" >-0.226706</td>\n","      <td id=\"T_20cdc_row8_col1\" class=\"data row8 col1\" >-0.109917</td>\n","      <td id=\"T_20cdc_row8_col2\" class=\"data row8 col2\" >0.180217</td>\n","      <td id=\"T_20cdc_row8_col3\" class=\"data row8 col3\" >-0.602378</td>\n","      <td id=\"T_20cdc_row8_col4\" class=\"data row8 col4\" >0.105506</td>\n","      <td id=\"T_20cdc_row8_col5\" class=\"data row8 col5\" >-0.131466</td>\n","      <td id=\"T_20cdc_row8_col6\" class=\"data row8 col6\" >0.268661</td>\n","      <td id=\"T_20cdc_row8_col7\" class=\"data row8 col7\" >0.176910</td>\n","      <td id=\"T_20cdc_row8_col8\" class=\"data row8 col8\" >1.000000</td>\n","      <td id=\"T_20cdc_row8_col9\" class=\"data row8 col9\" >0.018351</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_20cdc_level0_row9\" class=\"row_heading level0 row9\" >Financial Situation</th>\n","      <td id=\"T_20cdc_row9_col0\" class=\"data row9 col0\" >-0.279496</td>\n","      <td id=\"T_20cdc_row9_col1\" class=\"data row9 col1\" >-0.364695</td>\n","      <td id=\"T_20cdc_row9_col2\" class=\"data row9 col2\" >-0.504683</td>\n","      <td id=\"T_20cdc_row9_col3\" class=\"data row9 col3\" >-0.026917</td>\n","      <td id=\"T_20cdc_row9_col4\" class=\"data row9 col4\" >-0.527955</td>\n","      <td id=\"T_20cdc_row9_col5\" class=\"data row9 col5\" >0.442183</td>\n","      <td id=\"T_20cdc_row9_col6\" class=\"data row9 col6\" >0.274278</td>\n","      <td id=\"T_20cdc_row9_col7\" class=\"data row9 col7\" >-0.007754</td>\n","      <td id=\"T_20cdc_row9_col8\" class=\"data row9 col8\" >0.018351</td>\n","      <td id=\"T_20cdc_row9_col9\" class=\"data row9 col9\" >1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:56:46.099207Z","start_time":"2020-12-04T15:56:46.074807Z"},"id":"Rn8z9DUJUKdC","executionInfo":{"status":"ok","timestamp":1731142892152,"user_tz":-420,"elapsed":381,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["pipeline = Pipeline([('imp',SimpleImputer(strategy='mean')),\n","                     ('pca',PCA(n_components='mle',whiten=True)),\n","                    ('scl',RobustScaler()),\n","                    ('svm',SVC(verbose=True,probability=True,class_weight='balanced'))])"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:57:27.578292Z","start_time":"2020-12-04T15:56:46.982568Z"},"colab":{"base_uri":"https://localhost:8080/","height":242},"id":"6woXVqy-UKdC","executionInfo":{"status":"ok","timestamp":1731142893491,"user_tz":-420,"elapsed":374,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"99667210-d039-4382-8b7b-6ee05781cf47"},"source":["pipeline.fit(X_train,y_train)"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[LibSVM]"]},{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('imp', SimpleImputer()),\n","                ('pca', PCA(n_components='mle', whiten=True)),\n","                ('scl', RobustScaler()),\n","                ('svm',\n","                 SVC(class_weight='balanced', probability=True, verbose=True))])"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;imp&#x27;, SimpleImputer()),\n","                (&#x27;pca&#x27;, PCA(n_components=&#x27;mle&#x27;, whiten=True)),\n","                (&#x27;scl&#x27;, RobustScaler()),\n","                (&#x27;svm&#x27;,\n","                 SVC(class_weight=&#x27;balanced&#x27;, probability=True, verbose=True))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;Pipeline<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.pipeline.Pipeline.html\">?<span>Documentation for Pipeline</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;imp&#x27;, SimpleImputer()),\n","                (&#x27;pca&#x27;, PCA(n_components=&#x27;mle&#x27;, whiten=True)),\n","                (&#x27;scl&#x27;, RobustScaler()),\n","                (&#x27;svm&#x27;,\n","                 SVC(class_weight=&#x27;balanced&#x27;, probability=True, verbose=True))])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;PCA<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.decomposition.PCA.html\">?<span>Documentation for PCA</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>PCA(n_components=&#x27;mle&#x27;, whiten=True)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;RobustScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.RobustScaler.html\">?<span>Documentation for RobustScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>RobustScaler()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SVC(class_weight=&#x27;balanced&#x27;, probability=True, verbose=True)</pre></div> </div></div></div></div></div></div>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:57:31.546874Z","start_time":"2020-12-04T15:57:29.988595Z"},"id":"KCrvNMhNUKdD","executionInfo":{"status":"ok","timestamp":1731142895008,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["pred = pipeline.predict(X_test)\n","pred_proba = pipeline.predict_proba(X_test)"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:57:32.190637Z","start_time":"2020-12-04T15:57:32.172858Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"VbbELOkjUKdF","executionInfo":{"status":"ok","timestamp":1731142895394,"user_tz":-420,"elapsed":2,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"0f6d9b0f-b27b-4607-8259-55d1a0dc64fc"},"source":["from sklearn.metrics import classification_report\n","print(classification_report(y_test,pred))"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.84      0.61      0.71       116\n","           1       0.70      0.88      0.78       120\n","\n","    accuracy                           0.75       236\n","   macro avg       0.77      0.75      0.74       236\n","weighted avg       0.77      0.75      0.75       236\n","\n"]}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:15:16.476727Z","start_time":"2020-12-04T15:15:16.468883Z"},"id":"h242QCnGUKdG","executionInfo":{"status":"ok","timestamp":1731142896204,"user_tz":-420,"elapsed":2,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["def PlotROC(tpr,fpr,auc,size=10,linewidth=2):\n","    plt.figure(figsize=(size,size))\n","    plt.plot(fpr,tpr,color='darkorange',\n","         lw=linewidth, label='ROC curve (area = %0.2f)' % auc)\n","    plt.plot([0,1],[0,1],color='navy', lw=linewidth, linestyle='--')\n","    plt.xlabel(\"False Positive Rate\")\n","    plt.ylabel(\"True Positive Rate\")\n","    plt.title('Receiver operating characteristic example')\n","    plt.legend(loc=\"lower right\")\n","    plt.show()"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:15:17.110678Z","start_time":"2020-12-04T15:15:17.105246Z"},"id":"rUTny4thUKdI","executionInfo":{"status":"ok","timestamp":1731142897172,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["from sklearn.metrics import roc_auc_score, roc_curve # Import roc_auc_score and roc_curve\n","def GetRocCurve(y_true,y_proba):\n","    auc = roc_auc_score(y_true,y_proba)\n","    fpr, tpr,_ = roc_curve(y_true,y_proba)\n","    return fpr, tpr, auc"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:15:17.568742Z","start_time":"2020-12-04T15:15:17.555233Z"},"id":"gRwq4SLLUKdJ","executionInfo":{"status":"ok","timestamp":1731142897659,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["fpr, tpr, auc = GetRocCurve(y_test,pred_proba[:,1])"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:15:18.457419Z","start_time":"2020-12-04T15:15:18.073441Z"},"colab":{"base_uri":"https://localhost:8080/","height":727},"id":"92YN6tllUKdK","executionInfo":{"status":"ok","timestamp":1731142898754,"user_tz":-420,"elapsed":690,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"3e4a827a-8704-43ac-9c69-b8ddb507a3be"},"source":["PlotROC(tpr,fpr,auc,8,2)"],"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"2axD4XfNUKdL"},"source":["## GridSearch"]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:17:14.276759Z","start_time":"2020-12-04T15:17:14.270633Z"},"id":"7I2lV3h6UKdN","executionInfo":{"status":"ok","timestamp":1731142899154,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["params = {'imp__strategy': ['mean'],\n","          'pca__whiten':[True,False],\n","         'svm__C':[2,5,10],\n","         'svm__kernel':['rbf','sigmoid'],\n","         'svm__class_weight':['balanced'],\n","          'svm__gamma':['auto'],\n","         'svm__probability':[True]}"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:17:14.822064Z","start_time":"2020-12-04T15:17:14.815164Z"},"id":"OCoFem7xUKdN","executionInfo":{"status":"ok","timestamp":1731142900309,"user_tz":-420,"elapsed":3,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["grid = GridSearchCV(pipeline,param_grid=params,n_jobs=-1,cv=10,verbose=3,scoring='roc_auc')"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:52:01.307883Z","start_time":"2020-12-04T15:17:15.396438Z"},"colab":{"base_uri":"https://localhost:8080/"},"id":"PQpmoAMZUKdP","executionInfo":{"status":"ok","timestamp":1731142923080,"user_tz":-420,"elapsed":22773,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"1ebbd7c4-1487-44da-b309-651e8e83bec9"},"source":["scores = grid.fit(X_train,y_train)"],"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 10 folds for each of 12 candidates, totalling 120 fits\n","[LibSVM]"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/numpy/ma/core.py:2820: RuntimeWarning: invalid value encountered in cast\n","  _data = np.array(data, dtype=dtype, copy=copy,\n"]}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:52:10.039100Z","start_time":"2020-12-04T15:52:10.022557Z"},"id":"VQb5py6bUKdR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731142947727,"user_tz":-420,"elapsed":415,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"caf462a5-4e5d-44fe-f4dd-fd2ba8467252"},"source":["scores.best_score_"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8808605283605283"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:52:13.113660Z","start_time":"2020-12-04T15:52:13.104029Z"},"id":"t9aA6ulYUKdX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731142949336,"user_tz":-420,"elapsed":3,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"684ca517-b1d4-436d-d250-0940795779d3"},"source":["scores.best_params_"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'imp__strategy': 'mean',\n"," 'pca__whiten': True,\n"," 'svm__C': 2,\n"," 'svm__class_weight': 'balanced',\n"," 'svm__gamma': 'auto',\n"," 'svm__kernel': 'rbf',\n"," 'svm__probability': True}"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"0M4UsYNpUKdY"},"source":["## CrossValidation"]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:53:20.763263Z","start_time":"2020-12-04T15:53:20.754824Z"},"id":"GYxtyNqIUKdZ","executionInfo":{"status":"ok","timestamp":1731142952873,"user_tz":-420,"elapsed":367,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["pipeline2 = Pipeline([('imp',SimpleImputer(strategy='mean')),\n","                      ('pca',PCA(n_components='mle',whiten=True)),\n","                    ('scl',RobustScaler()),\n","                    ('svm',SVC(C=2,\n","                               kernel='rbf',\n","                               class_weight='balanced',\n","                               verbose=True,\n","                               probability=True,\n","                              gamma='auto'))])"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:02.778539Z","start_time":"2020-12-04T15:53:25.250863Z"},"id":"w8zUtUqBUKdb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731142955813,"user_tz":-420,"elapsed":2512,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"44685bba-8761-41ed-a053-21824547b11d"},"source":["cv_results = cross_validate(pipeline2, X_train, y_train, cv=10, verbose=2, n_jobs=-1,scoring='roc_auc')"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n","[Parallel(n_jobs=-1)]: Done  10 out of  10 | elapsed:    2.2s finished\n"]}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:06.738351Z","start_time":"2020-12-04T15:54:06.728117Z"},"id":"Yn0NrpWdUKdb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731142955813,"user_tz":-420,"elapsed":4,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"f3590683-b5fa-418c-dd55-d64ecbbf2fcf"},"source":["cv_results"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'fit_time': array([0.40785098, 0.45968723, 0.25563645, 0.72314572, 0.25920343,\n","        0.2500596 , 0.35167146, 0.52104378, 0.4214282 , 0.33303332]),\n"," 'score_time': array([0.01724863, 0.02768278, 0.013978  , 0.03523445, 0.01591229,\n","        0.01468039, 0.01684022, 0.01875877, 0.0150578 , 0.01328754]),\n"," 'test_score': array([0.88954545, 0.87954545, 0.84909091, 0.93888889, 0.89953704,\n","        0.86435185, 0.91095571, 0.83636364, 0.9016317 , 0.83869464])}"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:10.821218Z","start_time":"2020-12-04T15:54:10.813071Z"},"id":"zY7yI0pYUKdc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731142955813,"user_tz":-420,"elapsed":3,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"2145df9d-f686-4023-e90d-d48fb466a137"},"source":["np.mean(cv_results['test_score'])"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8808605283605283"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"nDQmtUHUUKdc"},"source":["## Refit"]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:34.316741Z","start_time":"2020-12-04T15:54:16.084006Z"},"id":"pHz0oySYUKdd","colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"status":"ok","timestamp":1731142957832,"user_tz":-420,"elapsed":405,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"8444cc0a-2e5e-49bd-83b8-3978ef502be3"},"source":["pipeline2.fit(X_train,y_train)"],"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["[LibSVM]"]},{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('imp', SimpleImputer()),\n","                ('pca', PCA(n_components='mle', whiten=True)),\n","                ('scl', RobustScaler()),\n","                ('svm',\n","                 SVC(C=2, class_weight='balanced', gamma='auto',\n","                     probability=True, verbose=True))])"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;imp&#x27;, SimpleImputer()),\n","                (&#x27;pca&#x27;, PCA(n_components=&#x27;mle&#x27;, whiten=True)),\n","                (&#x27;scl&#x27;, RobustScaler()),\n","                (&#x27;svm&#x27;,\n","                 SVC(C=2, class_weight=&#x27;balanced&#x27;, gamma=&#x27;auto&#x27;,\n","                     probability=True, verbose=True))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;Pipeline<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.pipeline.Pipeline.html\">?<span>Documentation for Pipeline</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>Pipeline(steps=[(&#x27;imp&#x27;, SimpleImputer()),\n","                (&#x27;pca&#x27;, PCA(n_components=&#x27;mle&#x27;, whiten=True)),\n","                (&#x27;scl&#x27;, RobustScaler()),\n","                (&#x27;svm&#x27;,\n","                 SVC(C=2, class_weight=&#x27;balanced&#x27;, gamma=&#x27;auto&#x27;,\n","                     probability=True, verbose=True))])</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SimpleImputer<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.impute.SimpleImputer.html\">?<span>Documentation for SimpleImputer</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SimpleImputer()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;PCA<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.decomposition.PCA.html\">?<span>Documentation for PCA</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>PCA(n_components=&#x27;mle&#x27;, whiten=True)</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;RobustScaler<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.preprocessing.RobustScaler.html\">?<span>Documentation for RobustScaler</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>RobustScaler()</pre></div> </div></div><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a></label><div class=\"sk-toggleable__content fitted\"><pre>SVC(C=2, class_weight=&#x27;balanced&#x27;, gamma=&#x27;auto&#x27;, probability=True, verbose=True)</pre></div> </div></div></div></div></div></div>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:46.092036Z","start_time":"2020-12-04T15:54:45.403762Z"},"id":"bcL2c4oQUKdd","executionInfo":{"status":"ok","timestamp":1731142958615,"user_tz":-420,"elapsed":401,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["pred_proba2 = pipeline2.predict_proba(X_test)\n","pred2 = pipeline2.predict(X_test)"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:48.359298Z","start_time":"2020-12-04T15:54:48.340547Z"},"id":"0zVmzUP2UKdf","executionInfo":{"status":"ok","timestamp":1731142959002,"user_tz":-420,"elapsed":1,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["fpr2, tpr2, auc2 = GetRocCurve(y_test,pred_proba2[:,1])"],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:49.871586Z","start_time":"2020-12-04T15:54:49.449114Z"},"id":"dhgSii6IUKdf","colab":{"base_uri":"https://localhost:8080/","height":727},"executionInfo":{"status":"ok","timestamp":1731142960019,"user_tz":-420,"elapsed":647,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"115e6684-acd3-42a7-e670-2b9ae82b9abc"},"source":["PlotROC(tpr2,fpr2,auc2,8,2)"],"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:55.749739Z","start_time":"2020-12-04T15:54:55.742635Z"},"id":"Zkmd47V-UKdg","executionInfo":{"status":"ok","timestamp":1731142961399,"user_tz":-420,"elapsed":3,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}}},"source":["def PlotConfusionMatrix(y_true,y_prediction):\n","    conf = confusion_matrix(y_true,y_prediction)\n","    crosstable = pd.crosstab(y_true, y_prediction, colnames=['Predicted Label'],rownames=['True Label'])\n","    sns.set(font_scale=1.4)\n","    sns.heatmap(crosstable, annot=True, annot_kws={\"size\":16},fmt='g',cmap='Blues')"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:54:56.902547Z","start_time":"2020-12-04T15:54:56.545165Z"},"id":"215LKAUGUKdg","colab":{"base_uri":"https://localhost:8080/","height":468},"executionInfo":{"status":"ok","timestamp":1731142962820,"user_tz":-420,"elapsed":478,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"4e61cfa8-3ff0-4c1f-96ef-423f96800af4"},"source":["import seaborn as sns\n","import pandas as pd\n","from sklearn.metrics import confusion_matrix # Import the missing function\n","\n","def PlotConfusionMatrix(y_true,y_prediction):\n","    \"\"\"\n","    Plots the confusion matrix using seaborn heatmap.\n","\n","    Args:\n","        y_true: True labels.\n","        y_prediction: Predicted labels.\n","    \"\"\"\n","    conf = confusion_matrix(y_true,y_prediction)\n","    crosstable = pd.crosstab(y_true, y_prediction, colnames=['Predicted Label'],rownames=['True Label'])\n","    sns.set(font_scale=1.4)\n","    sns.heatmap(crosstable, annot=True, annot_kws={\"size\":16},fmt='g',cmap='Blues')\n","PlotConfusionMatrix(y_test,pred2)"],"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"ExecuteTime":{"end_time":"2020-12-04T15:55:03.053256Z","start_time":"2020-12-04T15:55:03.032804Z"},"id":"Aa1Myrj2UKdh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1731142965578,"user_tz":-420,"elapsed":438,"user":{"displayName":"Anh Đức Nguyễn","userId":"12217047137724573999"}},"outputId":"17395f5d-411a-4d63-cbdd-6abf6dc6a4da"},"source":["print(classification_report(y_test,pred2))"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.85      0.79      0.82       116\n","           1       0.81      0.87      0.84       120\n","\n","    accuracy                           0.83       236\n","   macro avg       0.83      0.83      0.83       236\n","weighted avg       0.83      0.83      0.83       236\n","\n"]}]},{"cell_type":"code","metadata":{"id":"_wmtLnTnUKdh"},"source":[],"execution_count":null,"outputs":[]}]}